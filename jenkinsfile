pipeline {
    agent any
    environment {
        NETLIFY_SITE_ID= 'acc1df9b-7397-45b5-af15-d6a40767867b'

    }
    stages {
        stage('Build') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                sh '''
                    ls -la
                    node --version
                    npm --version
                    npm ci
                    npm run build
                    ls -la
                '''
                }
            }
                    stage('tests') {
                        parallel {
                            stage('Unit tests') {
                                agent {
                                    docker {
                                        image 'node:18-alpine'
                                        reuseNode true
                                    }
                                }
                                steps {
                                    sh '''
                                    #test -f build/index.html
                                    npm test
                                    '''
                                }
                            }
                                post {
                                    always {
                                        junit 'jest-result/junit.xml'
                                    }
                                }
                            }
                            stage ('E2E') {
                                agent {
                                    docker {
                                        image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
                                        reuseNode true 
                                    }
                                }
                                steps {
                                    npm install serve
                                    node_modules/.bin/serve -s build &
                                    sleep 10
                                    npx playwright test --reporter.html
                                    }
                                post {
                                    always {
                                        publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, icon: '', keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: '', useWrapperFileDirectly: true])
                                    }
                                }
                            }
                        }
                    }
                    stage('Deploy') {
                        agent {
                            docker {
                                image 'node:18-alpine'
                                reuseNode true
                            }
                        }
                        steps {
                            sh '''
                                npm install netlify-cli -g
                                netlify --version
                            '''
                            }
                        }
                            }
                        }
                    